name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - dev
      - acc
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 20

      - name: Install dependencies
        run: npm ci

      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      - name: Create environment.ts
        run: |
          mkdir -p src/environments
          BRANCH="${GITHUB_REF##*/}"
          if [[ "$BRANCH" == "dev" ]]; then
            echo "export const environment = {
              production: false,
              apiUrl: 'https://educrm-dev.web.app/',
              firebaseConfig: {
                apiKey: '${{ secrets.FIREBASE_API_KEY_DEV }}',
                authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN_DEV }}',
                projectId: 'educrm-dev',
                storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET_DEV }}',
                messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID_DEV }}',
                appId: '${{ secrets.FIREBASE_APP_ID_DEV }}',
                measurementId: '${{ secrets.FIREBASE_MEASUREMENT_ID_DEV }}'
              }
            };" > src/environments/environment.ts

          elif [[ "$BRANCH" == "acc" ]]; then
            echo "export const environment = {
              production: false,
              apiUrl: 'https://educrm-acc.web.app/',
              firebaseConfig: {
                apiKey: '${{ secrets.FIREBASE_API_KEY_ACC }}',
                authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN_ACC }}',
                projectId: 'educrm-acc',
                storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET_ACC }}',
                messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID_ACC }}',
                appId: '${{ secrets.FIREBASE_APP_ID_ACC }}',
                measurementId: '${{ secrets.FIREBASE_MEASUREMENT_ID_ACC }}'
              }
            };" > src/environments/environment.ts

          else
            echo "export const environment = {
              production: true,
              apiUrl: 'https://educrm-9b140.web.app/',
              firebaseConfig: {
                apiKey: '${{ secrets.FIREBASE_API_KEY_PROD }}',
                authDomain: '${{ secrets.FIREBASE_AUTH_DOMAIN_PROD }}',
                projectId: 'educrm-prod',
                storageBucket: '${{ secrets.FIREBASE_STORAGE_BUCKET_PROD }}',
                messagingSenderId: '${{ secrets.FIREBASE_MESSAGING_SENDER_ID_PROD }}',
                appId: '${{ secrets.FIREBASE_APP_ID_PROD }}',
                measurementId: '${{ secrets.FIREBASE_MEASUREMENT_ID_PROD }}'
              }
            };" > src/environments/environment.ts
          fi

      - name: Build Angular App
        run: |
          BRANCH="${GITHUB_REF##*/}"
          if [[ "$BRANCH" == "dev" ]]; then
            npm run build:dev
          elif [[ "$BRANCH" == "acc" ]]; then
            npm run build:acc
          else
            npm run build:prod
          fi

      - name: Deploy to Firebase Hosting
        run: |
          BRANCH="${GITHUB_REF##*/}"
          if [[ "$BRANCH" == "dev" ]]; then
            firebase deploy --only hosting:dev --token "${{ secrets.FIREBASE_TOKEN_DEV }}"
          elif [[ "$BRANCH" == "acc" ]]; then
            firebase deploy --only hosting:acc --token "${{ secrets.FIREBASE_TOKEN_ACC }}"
          else
            firebase deploy --only hosting:prod --token "${{ secrets.FIREBASE_TOKEN_PROD }}"
          fi
      - name: Write service account to file
        run: echo '${{ secrets.FIREBASE_SERVICE_ACCOUNT_DEV}}' > firebase-key.json
